# Golang CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-go/ for more details
version: 2
jobs:
  build:
    docker:
      # specify the version
      - image: circleci/golang:1.12.7
        environment:
          ENV: CI
          GO111MODULE: "on"
          RAGEL_VERSION: "6.10"
      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/postgres:9.4

    #### TEMPLATE_NOTE: go expects specific checkout path representing url
    #### expecting it in the form of
    ####   /go/src/github.com/circleci/go-tool
    ####   /go/src/bitbucket.org/circleci/go-tool
    working_directory: /go/src/github.com/influxdata/cron
    steps:
      - checkout
      - run:
          name: get ragel
          command: |
            curl http://www.colm.net/files/ragel/ragel-${RAGEL_VERSION}.tar.gz -O && \
            tar -xzf ragel-${RAGEL_VERSION}.tar.gz && \
            cd ragel-${RAGEL_VERSION}/ && \
            ./configure --prefix=/usr/local && \
            make && \
            make install && \
            cd .. && rm -rf ragel-${RAGEL_VERSION}*
      - run: 
          name: check generated code
          command: |
            go generate
            if ! git --no-pager diff --exit-code -- go.mod go.sum; then
              echo generate not generated properly run go generate with ${RAGEL_VERSION}
              exit 1
            fi
      - run:
          name: check tidy
          command: |
            go mod tidy
            if ! git --no-pager diff --exit-code -- go.mod go.sum; then
              echo modules are not tidy, please run 'go mod tidy'
              exit 1
            fi
      # specify any bash command here prefixed with `run: `
      - run: go get -v -t -d ./...
      - run: go vet ./...
      - run: go get honnef.co/go/tools/cmd/staticcheck  && staticcheck ./...
      - run: go test -v -e2e --race ./...
